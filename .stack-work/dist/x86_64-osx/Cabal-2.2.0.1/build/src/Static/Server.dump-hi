
==================== FINAL INTERFACE ====================
2019-01-02 02:09:28.990887 UTC

interface file-server-0.1.0.0-8OWCfd0BW201IYIagzXwq5:Static.Server 8043
  interface hash: e98a9497ec633bc93b31bff388cc1423
  ABI hash: 59fbe3b57c4b4720208b5b6484f0d013
  export-list hash: d8a13a056dbea70337eae6a44196f0ee
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9866798c3e630c8302e4a88ae179a8a3
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Static.Server.main
module dependencies: Static.Paths
package dependencies: StateVar-1.1.1.1 adjunctions-4.4
                      ansi-terminal-0.8.0.4 ansi-wl-pprint-0.6.8.2 appar-0.1.4
                      array-0.5.2.0 async-2.2.1 attoparsec-0.13.2.2 auto-update-0.1.4
                      base-4.11.1.0 base-orphans-0.7 basement-0.0.8 bifunctors-5.5.3
                      binary-0.8.5.1 blaze-builder-0.4.1.0 blaze-html-0.9.1.1
                      blaze-markup-0.8.2.1 bsb-http-chunked-0.0.0.2 byteorder-1.0.4
                      bytestring-0.10.8.2 call-stack-0.1.0 case-insensitive-1.2.0.11
                      charset-0.3.7.1 colour-2.3.4 comonad-5.0.4 containers-0.5.11.0
                      contravariant-1.4.1 core-0.1.0.0 cryptonite-0.25
                      data-default-class-0.1.2.0 deepseq-1.4.3.0 directory-1.3.1.5
                      distributive-0.5.3 easy-file-0.2.2 exceptions-0.10.0
                      fast-logger-2.4.11 file-embed-0.0.10.1 filepath-1.4.2
                      fingertree-0.1.4.1 free-5.0.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0
                      hashable-1.2.7.0 http-date-0.0.8 http-types-0.12.1 http2-1.6.3
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.1 iproute-1.7.5
                      kan-extensions-5.2 lens-4.16.1 lifted-base-0.2.3.12 memory-0.14.16
                      mime-types-0.1.0.8 monad-control-1.0.2.3 mtl-2.2.2 network-2.6.3.6
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0 parsers-0.12.9
                      pretty-1.1.3.6 prettyprinter-1.2.1 primitive-0.6.3.0
                      profunctors-5.2.2 psqueues-0.2.7.0 random-1.1 reducers-3.12.3
                      reflection-2.1.4 resourcet-1.2.1 scientific-0.3.6.2
                      semigroupoids-5.2.2 show-prettyprint-0.2.2 simple-sendfile-0.2.27
                      stm-2.4.5.0 streaming-commons-0.2.1.0 stringsearch-0.3.6.6
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.0
                      th-abstraction-0.2.8.0 time-1.8.0.2 transformers-0.5.5.0
                      transformers-base-0.4.5.2 transformers-compat-0.6.2 trifecta-2
                      unix-2.7.2.2 unix-compat-0.5.0.1 unix-time-0.3.8
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 vault-0.3.1.2 vector-0.12.0.1 wai-3.2.1.2
                      wai-app-static-3.1.6.2 wai-extra-3.0.24.1 wai-logger-2.3.2
                      warp-3.2.23 word8-0.1.3 zlib-0.6.2
orphans: core-0.1.0.0:Core.Record.Internal
         reflection-2.1.4:Data.Reflection
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle colour-2.3.4:Data.Colour
         unix-time-0.3.8:Data.UnixTime.Diff stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         network-2.6.3.6:Network.Socket text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         core-0.1.0.0:Core.Record.Internal
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool
                         fingertree-0.1.4.1:Data.FingerTree
                         free-5.0.2:Control.Comonad.Cofree
                         free-5.0.2:Control.Comonad.Trans.Cofree
                         free-5.0.2:Control.Monad.Free free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         iproute-1.7.5:Data.IP.Addr iproute-1.7.5:Data.IP.Range
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         trifecta-2:Text.Trifecta.Delta trifecta-2:Text.Trifecta.Rendering
                         trifecta-2:Text.Trifecta.Rope
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 052ec29b676ed8efc1decd97140a27e3
import  -/  base-4.11.1.0:System.IO ce09fff7d191d14067bddc2efd9b53a4
import  -/  base-4.11.1.0:Text.Read 6c02630607b565ffcb34e8127673989b
import  -/  bytestring-0.10.8.2:Data.ByteString 6d0008c12e5c3acd7278a6b95640b4e2
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy b6cb59a78204810b2a79502bf5b4c1fc
import  -/  core-0.1.0.0:Core 835b8743971f38494bad3bcac60f4b58
import  -/  core-0.1.0.0:Core.Record 062ec27790105de57a0d8f15ee5c2498
import  -/  file-embed-0.0.10.1:Data.FileEmbed c32791251d511720ae04af8195dacd86
import  -/  Static.Paths 7dc4e0ed2d576fb74cfa6c615b6b677c
  exports: 3e6e80532d213187c8bfa67fd7a0f3ab
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  http-types-0.12.1:Network.HTTP.Types.Header c68684bc9e7fc34c2f7c9eba88e9ba85
import  -/  http-types-0.12.1:Network.HTTP.Types.Status 3d744f27e196471da5a31736763d7490
import  -/  wai-3.2.1.2:Network.Wai 9bdc7d0ee9373e3477ccd494a79eca1f
import  -/  wai-app-static-3.1.6.2:Network.Wai.Application.Static ad55354240d7c62919c926953357b8ec
import  -/  wai-app-static-3.1.6.2:WaiAppStatic.Storage.Filesystem aad6362e3da683791d5e657d7e4eb6ba
import  -/  wai-app-static-3.1.6.2:WaiAppStatic.Types 2be53de8efb0c2240089bfe0c763fd0b
import  -/  wai-extra-3.0.24.1:Network.Wai.Middleware.RequestLogger 215da9967abbbf3fd3eba2b653cb1e2f
import  -/  warp-3.2.23:Network.Wai.Handler.Warp 590fc71ea9c5fefa017fe9758b4732ca
import  -/  warp-3.2.23:Network.Wai.Handler.Warp.Run c7de02fbfca1c6313a6c3f1000dbb219
a8c786acd85942195bbb6a36f0d4dcf2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Static.Server.$trModule3
                   Static.Server.$trModule1) -}
01f0ec9a9229523c6a8b3bd7a4a306d2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Static.Server.$trModule2) -}
201090e314a2802a390bb72f1051269f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Static.Server"#) -}
937701328939e8c79d2d5c8cb8032d5c
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Static.Server.$trModule4) -}
70a5c69d797f3f16b4b2738649a503f6
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("file-server-0.1.0.0-8OWCfd0BW201IYIagzXwq5"#) -}
edae75e7e562d42f5e689cf146a12b0d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Static.Server.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1e4e53200b6101cc35ffec0fa19cfa36
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case Static.Server.main12
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : ds ds2
                   -> case GHC.Base.eqString
                             ds
                             (GHC.CString.unpackCString# Static.Server.main11) of wild1 {
                        GHC.Types.False
                        -> case Static.Server.main12
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        GHC.Types.True
                        -> case ds2 of wild2 {
                             []
                             -> case Static.Server.main12
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             : port_ ds3
                             -> case ds3 of wild3 {
                                  []
                                  -> case Static.Server.main12
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     of {}
                                  : root ds4
                                  -> case ds4 of wild4 {
                                       []
                                       -> case GHC.IO.Handle.Text.hPutStr2
                                                 GHC.IO.Handle.FD.stdout
                                                 (GHC.CString.unpackAppendCString#
                                                    Static.Server.main10
                                                    port_)
                                                 GHC.Types.True
                                                 ipv of ds5 { (#,#) ipv2 ipv3 ->
                                          let {
                                            lvl1 :: [GHC.Types.Char]
                                            = GHC.Base.++ @ GHC.Types.Char root Static.Server.main8
                                          } in
                                          let {
                                            lvl2 :: Network.Wai.Internal.Response
                                            = Network.Wai.Internal.ResponseFile
                                                Network.HTTP.Types.Status.status200
                                                Static.Server.main4
                                                lvl1
                                                (GHC.Base.Nothing @ Network.Wai.Internal.FilePart)
                                          } in
                                          Network.Wai.Handler.Warp.Run.run2
                                            (Network.Wai.Handler.Warp.Settings.Settings
                                               (case Text.Read.readEither8
                                                       @ GHC.Types.Int
                                                       (Text.ParserCombinators.ReadP.run
                                                          @ GHC.Types.Int
                                                          (GHC.Read.$fReadInt_$sreadNumber
                                                             GHC.Read.$fReadInt2
                                                             Text.ParserCombinators.ReadPrec.minPrec
                                                             @ GHC.Types.Int
                                                             (Text.Read.readEither7
                                                                @ GHC.Types.Int))
                                                          port_) of wild5 {
                                                  [] -> Static.Server.main3
                                                  : x ds6
                                                  -> case ds6 of wild6 {
                                                       [] -> x
                                                       : ipv4 ipv5 -> Static.Server.main2 } })
                                               Network.Wai.Handler.Warp.Settings.defaultSettings16
                                               Network.Wai.Handler.Warp.Settings.defaultOnException1
                                                 `cast`
                                               (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                                                ->_R <GHC.Exception.SomeException>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                                               Network.Wai.Handler.Warp.Settings.defaultSettings15
                                                 `cast`
                                               (<Network.Socket.Types.SockAddr>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultSettings14
                                                 `cast`
                                               (<Network.Socket.Types.SockAddr>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultSettings13
                                               (GHC.Base.Nothing
                                                  @ Network.Wai.Handler.Warp.Timeout.Manager)
                                               Network.Wai.Handler.Warp.Settings.defaultSettings12
                                               Network.Wai.Handler.Warp.Settings.defaultSettings12
                                               Network.Wai.Handler.Warp.Settings.defaultSettings11
                                                 `cast`
                                               (Sym (GHC.Types.N:IO[0] <()>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultSettings10
                                                 `cast`
                                               (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                                                 -> GHC.Types.IO ()>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               GHC.Types.False
                                               Network.Wai.Handler.Warp.Settings.defaultSettings9
                                                 `cast`
                                               (<GHC.Types.IO ()>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultSettings6
                                               Network.Wai.Handler.Warp.Settings.defaultSettings4
                                               Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                                               Network.Wai.Handler.Warp.Settings.defaultSettings3
                                               GHC.Types.True
                                               Network.Wai.Handler.Warp.Settings.defaultSettings2
                                                 `cast`
                                               (<Network.Wai.Internal.Request>_R
                                                ->_R <Network.HTTP.Types.Status.Status>_R
                                                ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               Network.Wai.Handler.Warp.Settings.defaultSettings1
                                                 `cast`
                                               (<Network.Wai.Internal.Request>_R
                                                ->_R <Data.ByteString.Internal.ByteString>_R
                                                ->_R <GHC.Integer.Type.Integer>_R
                                                ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                               (GHC.Base.Nothing @ GHC.Types.Int))
                                            (Network.Wai.Application.Static.staticApp
                                               (WaiAppStatic.Types.StaticSettings
                                                  (WaiAppStatic.Storage.Filesystem.defaultWebAppSettings5
                                                     WaiAppStatic.Storage.Filesystem.defaultWebAppSettings2
                                                       `cast`
                                                     (<GHC.IO.FilePath>_R
                                                      ->_R Sym (GHC.Types.N:IO[0]
                                                                    <GHC.Base.Maybe
                                                                       Data.ByteString.Internal.ByteString>_R))
                                                     root)
                                                    `cast`
                                                  (<WaiAppStatic.Types.Pieces>_R
                                                   ->_R Sym (GHC.Types.N:IO[0]
                                                                 <WaiAppStatic.Types.LookupResult>_R))
                                                  WaiAppStatic.Storage.Filesystem.defaultWebAppSettings1
                                                    `cast`
                                                  (<WaiAppStatic.Types.File>_R
                                                   ->_R Sym (GHC.Types.N:IO[0]
                                                                 <Network.Mime.MimeType>_R))
                                                  (GHC.Types.[] @ WaiAppStatic.Types.Piece)
                                                  (GHC.Base.Nothing @ WaiAppStatic.Types.Listing)
                                                  WaiAppStatic.Types.MaxAgeForever
                                                  Util.defaultMkRedirect
                                                  GHC.Types.False
                                                  GHC.Types.True
                                                  GHC.Types.False
                                                  (GHC.Base.Just
                                                     @ Network.Wai.Application
                                                     (\ (req :: Network.Wai.Internal.Request)
                                                        (res :: Network.Wai.Internal.Response
                                                                -> GHC.Types.IO
                                                                     Network.Wai.Internal.ResponseReceived) ->
                                                      res lvl2))))
                                            ipv2 }
                                       : ipv2 ipv3
                                       -> case Static.Server.main12
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {} } } } } } }) -}
2f03e29353692a0565fd926ab2b0c327
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \Server running on port: "#) -}
2794a9a12617059b06a01d57c831f716
  main11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("spa"#) -}
df32a2192c95b466d5eee54bfeda97cf
  main12 :: GHC.Types.IO ()
  {- Strictness: x -}
3bb08dcca3551b944ccbb0a02a5c10b2
  main2 :: GHC.Types.Int
  {- Strictness: x -}
5f6046a0649f2cb373de52bd7db7de93
  main3 :: GHC.Types.Int
  {- Strictness: x -}
04ac8e11cf4a936ca3e711e0aa810993
  main4 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   Static.Server.main5
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
a6332f056d3d8ab76a935b416a199303
  main5 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Static.Server.main7, Static.Server.main6)) -}
4ddfb07e02504220ce782d8e42597154
  main6 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Static.Server.main_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Static.Server.main_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
a723748aecff9e5d26d6b4f34c6506a2
  main7 :: Network.HTTP.Types.Header.HeaderName
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Static.Server.main_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 let {
                   ipv2 :: GHC.ForeignPtr.ForeignPtrContents
                   = GHC.ForeignPtr.PlainForeignPtr ipv1
                 } in
                 let {
                   ipv3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds2
                 } in
                 case Data.CaseInsensitive.Internal.$wfoldCaseBS
                        Static.Server.main_addr#1
                        ipv2
                        0#
                        ipv3 of dt1 { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                 Data.CaseInsensitive.Internal.CI
                   @ Data.ByteString.Internal.ByteString
                   (Data.ByteString.Internal.PS
                      Static.Server.main_addr#1
                      ipv2
                      0#
                      ipv3)
                   dt1 } } }) -}
e4c575d3ab01914a2915d091d7a92d19
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Static.Server.main9) -}
6c67866835eb0ec8b634e11436bafd02
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/index.html"#) -}
9653972c413734ebbdd799a5f6b5e124
  main_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/html"#) -}
7bada3c019f8517a315e15da886bf3c3
  main_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Content-Type"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

